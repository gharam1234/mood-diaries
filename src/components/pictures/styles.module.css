/* ===================================
   Pictures 컴포넌트 스타일 - 비율기반 반응형 디자인
   =================================== */

.container {
  display: flex;
  flex-direction: column;
  width: 100%;
  max-width: 1168px;
  margin: 0 auto;
  padding: 0 16px;
}

/* ===================================
   Gap 영역들
   =================================== */

/* 첫 번째 gap 영역: 1168 x 32 */
.gap {
  width: 100%;
  height: 32px;
}

/* 두 번째 gap 영역: 1168 x 42 */
.gap:nth-of-type(2) {
  height: 42px;
}

/* ===================================
   Filter 영역: 비율기반 반응형 (width: 100%)
   =================================== */

.filter {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100%; /* 자동 축소를 위한 100% 적용 */
  height: 48px; /* 고정 높이 유지 */
  border-radius: 8px;
}

.filterContent {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100%; /* 부모의 100%를 상속하여 자동 축소 */
  min-width: 240px; /* 최소 너비 보장 */
}

.filterSelectBox {
  width: 240px; /* 개별 아이템 고정값 유지 */
  min-width: 240px; /* 최소 너비 보장 */
}

/* ===================================
   Main 영역: 비율기반 반응형 (width: 100%)
   =================================== */

.main {
  display: flex;
  flex-direction: column;
  width: 100%; /* 자동 축소를 위한 100% 적용 */
  min-height: 200px; /* 최소 높이 고정값 유지 */
  background-color: var(--color-background-primary);
  border: 1px solid var(--color-border-primary);
  border-radius: 12px;
  padding: 24px; /* 고정 패딩값 유지 */
}

/* ===================================
   Picture Grid 레이아웃: 비율기반 반응형
   =================================== */

.pictureGrid {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: center;
  gap: 40px; /* 고정 gap 값 유지 */
  width: 100%; /* 부모의 100%를 상속하여 자동 축소 */
}

/* ===================================
   Picture Card 스타일: 개별 아이템 고정값 유지
   =================================== */

.pictureCard {
  display: flex;
  flex-direction: column;
  flex-shrink: 0; /* 개별 아이템 크기 고정 */
  overflow: visible;
  background-color: transparent;
  border: none;
  border-radius: 0;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.pictureCard:hover {
  transform: none;
  box-shadow: none;
  border-color: transparent;
}

.pictureImageContainer {
  position: relative;
  /* width와 height는 동적으로 설정됨 - 개별 아이템 고정값 유지 */
  overflow: hidden;
  background-color: transparent;
}

.pictureImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.pictureCard:hover .pictureImage {
  transform: none;
}

.pictureInfo {
  display: none;
}

/* ===================================
   Empty State 스타일
   =================================== */

.emptyState {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 200px;
  background-color: var(--color-background-secondary);
  border: 1px dashed var(--color-border-primary);
  border-radius: 12px;
}

.emptyMessage {
  font-size: var(--typography-body01-fontSize);
  line-height: var(--typography-body01-lineHeight);
  font-weight: var(--typography-body01-fontWeight);
  color: var(--color-text-secondary);
  text-align: center;
  margin: 0;
}

/* ===================================
   스플래시 스크린 스타일
   =================================== */

.splashScreen {
  /* width와 height는 동적으로 설정됨 */
  background-color: #f5f5f5;
  border-radius: 8px;
  position: relative;
  overflow: hidden;
  animation: shimmer 1.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
}

.splashScreen::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    30deg,
    transparent 0%,
    rgba(255, 255, 255, 0.8) 50%,
    transparent 100%
  );
  filter: blur(2px);
  animation: slide 1.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
}

@keyframes shimmer {
  0% {
    background-color: #f5f5f5;
  }
  50% {
    background-color: #e8e8e8;
  }
  100% {
    background-color: #f5f5f5;
  }
}

@keyframes slide {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* 스플래시 스크린 그리드: 비율기반 반응형 */
.splashGrid {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: center;
  gap: 40px; /* 고정 gap 값 유지 */
  width: 100%; /* 부모의 100%를 상속하여 자동 축소 */
}

/* 에러 상태 스타일 */
.errorState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 200px;
  background-color: var(--color-background-secondary);
  border: 1px dashed var(--color-border-primary);
  border-radius: 12px;
  padding: 24px;
}

.errorMessage {
  font-size: var(--typography-body01-fontSize);
  line-height: var(--typography-body01-lineHeight);
  font-weight: var(--typography-body01-fontWeight);
  color: var(--color-text-error);
  text-align: center;
  margin: 0 0 16px 0;
}

.retryButton {
  padding: 8px 16px;
  background-color: var(--color-primary);
  color: var(--color-text-on-primary);
  border: none;
  border-radius: 6px;
  font-size: var(--typography-body02-fontSize);
  cursor: pointer;
  transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.retryButton:hover {
  background-color: var(--color-primary-hover);
}

/* ===================================
   비율기반 반응형 디자인
   =================================== */

/* 태블릿 크기 - width: 100%로 자동 축소, 개별 아이템 고정값 유지 */
@media (max-width: 768px) {
  .container {
    padding: 0 12px; /* 고정 패딩값 유지 */
  }
  
  .filter {
    width: 100%; /* 자동 축소 유지 */
  }
  
  .filterContent {
    width: 100%; /* 자동 축소 유지 */
  }
  
  .filterSelectBox {
    width: 240px; /* 개별 아이템 고정값 유지 */
  }
  
  .main {
    width: 100%; /* 자동 축소 유지 */
    padding: 16px; /* 고정 패딩값 유지 */
  }
  
  .pictureGrid {
    width: 100%; /* 자동 축소 유지 */
    gap: 16px; /* 고정 gap 값 유지 */
  }
  
  .splashGrid {
    width: 100%; /* 자동 축소 유지 */
    gap: 16px; /* 고정 gap 값 유지 */
  }
  
  /* 이미지 크기는 동적으로 설정됨 - 개별 아이템 고정값 유지 */
}

/* 모바일 크기 - width: 100%로 자동 축소, 개별 아이템 고정값 유지 */
@media (max-width: 480px) {
  .container {
    padding: 0 8px; /* 고정 패딩값 유지 */
  }
  
  .filter {
    width: 100%; /* 자동 축소 유지 */
  }
  
  .filterContent {
    width: 100%; /* 자동 축소 유지 */
  }
  
  .filterSelectBox {
    width: 240px; /* 개별 아이템 고정값 유지 */
  }
  
  .main {
    width: 100%; /* 자동 축소 유지 */
    padding: 12px; /* 고정 패딩값 유지 */
  }
  
  .pictureGrid {
    width: 100%; /* 자동 축소 유지 */
    gap: 12px; /* 고정 gap 값 유지 */
  }
  
  .splashGrid {
    width: 100%; /* 자동 축소 유지 */
    gap: 12px; /* 고정 gap 값 유지 */
  }
  
  /* 이미지 크기는 동적으로 설정됨 - 개별 아이템 고정값 유지 */
}
